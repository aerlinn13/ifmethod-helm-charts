apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    app: {{ .Values.postgres.name }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      initContainers:
      - name: init-chmod-data
        image: busybox
        command: ["sh", "-c", "mkdir -p /var/lib/postgresql/data/pgdata && chmod 700 /var/lib/postgresql/data/pgdata"]
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      containers:
      - name: {{ .Values.postgres.name }}
        image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
        ports:
        - containerPort: {{ .Values.postgres.containerPort }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.env.POSTGRES_USER | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.env.POSTGRES_PASSWORD | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.env.POSTGRES_DB | quote }}
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}-pvc